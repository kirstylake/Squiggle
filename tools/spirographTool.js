// This can be added near the end of the project, the plan is to create an autogenerated spirograph, this spirograph will change according to sliders that are adjusted
// inspiration from: https://editor.p5js.org/cassie/sketches/9sRtfT9r4
//add different options fro spirograoh, ie a circle mode 

function SpirographTool() {

    this.icon = "assets/spirographTool.png";
    this.name = "spirographTool"

    this.draw = function () {

        if (mouseIsPressedInCanvas()) {
            // Get the shape selected from the dropdown bos
            var options = document.querySelector("select");
            var shape = options.value;

            //Remove the fill so the spirograph shapes can be seen properly
            noFill();
            var followCheck = document.querySelector("#followCheck").checked;
            var radius;

            //Check if the user wants the spirograph to follow their mouse or not
            if (followCheck == true)
            {
                //If the spirograph is following the mouse make the X and Y coordinates of the graph follow the mouse
                coordX = mouseX;
                coordY = mouseY;
                radius = abs(width / 2 - mouseX);
            }
            else
            {
                //if the spirograph doesn't follow the mouse just use the width and height to decide the coordinates
                coordX = width/2;
                coordY = height/2;
                radius = abs(width - mouseX);

            }
            //Case statement to change the type of spirograph depending on the option selected
            switch(shape)
            {
                case 'Square':
                    rectMode(CENTER);
                    rect(coordX, coordY, radius, radius); 
                    break;
                case 'Circle':
                    ellipse(coordX, coordY, radius, radius);
                    break;
                case 'Star':
                    // Creating a star shape
                    beginShape();
                    vertex(coordX + 130, coordY - 20)
                    vertex(coordX + 50,coordY - 20 )
                    vertex(coordX + 20, coordY - 105)
                    vertex(coordX - 20 , coordY - 20 )
                    vertex(coordX - 100 , coordY - 20 )
                    vertex(coordX - 35 ,coordY + 35 )
                    vertex(coordX - 60 ,coordY +105 )
                    vertex(coordX + 15 ,coordY +65 )
                    vertex(coordX + 90 ,coordY +105)
                    vertex(coordX + 65, coordY + 35 )
                
                    endShape(CLOSE); 
                    break;
                    case 'Triangle':
                        triangle(coordX, coordY - radius, coordX + radius, coordY + radius, coordX - radius, coordY+ radius);
            }
        }

    }

    this.populateOptions = function () {
        //================================================================
        // COLOUR PALETTE CODE
        //================================================================
        // We always quicly destroy whatever is present in the colourPalette so we can add what we need to
        // I always destroy before I create just incase some items are still present
        colourP.destroyPalette();
        colourP.colourChoice();
        colourP.alphaChoice();
        colourP.strokeChoice();
        //================================================================
        // END OF COLOUR PALETTE CODE
        //================================================================
        //Remove anything in options
        DestroyOptions();
        createTable();


        //Populate the Options
        li = document.querySelector("#li_options");
        label = document.createElement("label");
        selectEl = document.createElement("select");

        label.id = "label";
        label.for = "myList";
        label.innerText = "Spirograph Type:";
        label.style.marginRight = "5px";

        li.append(label);
        li.append(selectEl);

        selectEl.id = "myList";

        // an array with our options that we want to fill the array with
        options = ["Square", "Circle", "Star", "Triangle"];
        // an array to temporarily hold our option elements that are created
        optionElements = [];
        
        //Fill up the options dropdown
        for ( var i = 0; i < options.length; i++ )
        {
            var option = null;
            option = document.createElement("option");
            option.innerText = options[i];
            option.id = options[i];
            optionElements.push(option);
        };

        //Populate the Select Element
        for (var i = 0; i < optionElements.length; i ++)
        {
            selectEl.append(optionElements[i]);
        };

        //Creating the label and the checkbox for the follow mouse functionality
        label2 = document.createElement('label');
        check = document.createElement('input');
        ul = document.querySelector("#optionsul");
        li2 = document.createElement('li');

        label2.id = "label2";
        label2.for = "myRadio";
        label2.innerText = "Follow mouse:";
        label2.style.marginRight = "5px";

        check.type = "checkbox";
        check.id = "followCheck"; 

        li2.append(label2);
        li2.append(check);

        ul.append(li2);

    }
}
